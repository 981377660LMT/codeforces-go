// Code generated by copypasta/template/atcoder/generator_test.go
package main

import (
	"fmt"
	"github.com/EndlessCheng/codeforces-go/main/testutil"
	"io"
	"sort"
	"testing"
)

// 题目：https://atcoder.jp/contests/abc173/tasks/abc173_e
// 提交：https://atcoder.jp/contests/abc173/submit?taskScreenName=abc173_e
// 对拍：https://atcoder.jp/contests/abc173/submissions?f.LanguageName=Go&f.Status=AC&f.Task=abc173_e&orderBy=source_length
// 最短：https://atcoder.jp/contests/abc173/submissions?f.Status=AC&f.Task=abc173_e&orderBy=source_length
func Test_e(t *testing.T) {
	testCases := [][2]string{
		{
			`4 2
1 2 -3 -4`,
			`12`,
		},
		{
			`4 3
-1 -2 -3 -4`,
			`1000000001`,
		},
		{
			`2 1
-1 1000000000`,
			`1000000000`,
		},
		{
			`10 10
1000000000 100000000 10000000 1000000 100000 10000 1000 100 10 1`,
			`999983200`,
		},
		{
			`4 1
1 -1 -3 0`,
			`1`,
		},
	}
	testutil.AssertEqualStringCase(t, testCases, 0, run)
}

func TestCompare(_t *testing.T) {
	//return
	testutil.DebugTLE = 0
	rg := testutil.NewRandGenerator()
	inputGenerator := func() string {
		//return ``
		rg.Clear()
		n := rg.Int(1, 4)
		 rg.Int(1,n)
		rg.NewLine()
		rg.IntSlice(n, -3, 3)
		return rg.String()
	}

	testutil.AssertEqualRunResultsInf(_t, inputGenerator, runAC, run)
}

func runAC(in io.Reader, out io.Writer) {
	var n, k int
	fmt.Fscan(in, &n, &k)

	r := n - 1
	a := make([]int, n)
	for i := 0; i < n; i++ {
		fmt.Fscan(in, &a[i])
	}
	sort.Ints(a)

	res, b := 1, 1
	if k%2 != 0 {
		res = a[r]
		r--
		k--
		if res < 0 {
			b = -1
		} else {
			b = 1
		}
	}

	l := 0
	mod := int(1e9) + 7
	for k > 0 {
		x := a[l] * a[l+1]
		y := a[r] * a[r-1]
		if x*b > y*b {
			res *= x % mod
			res %= mod
			l += 2
		} else {
			res *= y % mod
			res %= mod
			r -= 2
		}
		k -= 2
	}

	fmt.Fprint(out, (res + mod) % mod)
}