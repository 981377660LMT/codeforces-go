// Generated by copypasta/template/generator_test.go
package main

import (
	"fmt"
	"github.com/EndlessCheng/codeforces-go/main/testutil"
	"io"
	"testing"
)

// https://codeforces.com/problemset/problem/719/B
// https://codeforces.com/problemset/status/719/problem/B
func Test_cf719B(t *testing.T) {
	testCases := [][2]string{
		{
			`5
rbbrr`,
			`1`,
		},
		{
			`5
bbbbb`,
			`2`,
		},
		{
			`3
rbr`,
			`0`,
		},
		{
			`13
rbbbrbrrbrrbb`,
			`3`,
		},
	}
	testutil.AssertEqualStringCase(t, testCases, 0, cf719B)
}

func TestCompare_cf719B(_t *testing.T) {
	return
	testutil.DebugTLE = 0
	rg := testutil.NewRandGenerator()
	inputGenerator := func() string {
		//return ``
		rg.Clear()
		n := rg.Int(1, 9)
		rg.NewLine()
		rg.StrInSet(n, n, "br")
		return rg.String()
	}
	abs := func(x int) int {
		if x < 0 {
			return -x
		}
		return x
	}
	
	// 暴力算法
	runBF := func(in io.Reader, out io.Writer) {
		var a, b, ra, ba, rb, bb, n int
		var s string
		fmt.Fscan(in, &n, &s)
		for i := 0; i < n; i++ {
			if (s[i] != 'r' && i%2 == 0) || (s[i] != 'b' && i%2 == 1) {
				if s[i] == 'r' {
					ra++
				} else {
					ba++
				}
			}
			if (s[i] != 'b' && i%2 == 0) || (s[i] != 'r' && i%2 == 1) {
				if s[i] == 'r' {
					rb++
				} else {
					bb++
				}
			}
		}
		a = abs(ra-ba) + min(ra, ba)
		b = abs(rb-bb) + min(rb, bb)
		fmt.Fprintln(out, min(a, b))
	}

	testutil.AssertEqualRunResultsInf(_t, inputGenerator, runBF, cf719B)
}
