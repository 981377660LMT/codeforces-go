// Code generated by generator_test.
package main

import (
	"github.com/EndlessCheng/codeforces-go/leetcode/testutil"
	"testing"
)

// 1e9~1e18 √n logn 1     二分 二进制
// 1e5~1e6  nlogn nαn n   二分 RMQ 并查集
// 1e3~1e4  n^2 n√n       RMQ DP 分块
// 300~500  n^3           DP 二分图
func Test(t *testing.T) {
	t.Log("Current test is [c]")
	exampleIns := [][]string{{`[[1,2],[2,3],[3,4]]`}, {`[[1,2],[2,3],[3,4],[1,2]]`}, {`[[1,4],[4,4],[2,2],[3,4],[1,1]]`}, {`[[1,100000]]`}, {`[[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7]]`}}
	exampleOuts := [][]string{{`3`}, {`4`}, {`4`}, {`1`}, {`7`}}
	// TODO: 测试参数的下界和上界！
	// custom test cases or WA cases.
	exampleIns = append(exampleIns, []string{`[[1,5],[1,5],[1,5],[2,3],[2,3]]`},
	[]string{`[[1,3],[1,3],[1,3],[3,4]]`},
	)
	exampleOuts = append(exampleOuts, []string{`5`}, []string{`4`})
	targetCaseNum := 0
	if err := testutil.RunLeetCodeFuncWithCase(t, maxEvents, exampleIns, exampleOuts, targetCaseNum); err != nil {
		t.Fatal(err)
	}
}
// https://leetcode-cn.com/contest/weekly-contest-176/problems/maximum-number-of-events-that-can-be-attended/
