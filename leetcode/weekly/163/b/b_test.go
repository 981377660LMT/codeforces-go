// Code generated by generator_test.
package main

import (
	"github.com/EndlessCheng/codeforces-go/leetcode/testutil"
	"github.com/stretchr/testify/assert"
	"strings"
	"testing"
)

func Test(t *testing.T) {
	t.Log("Current test is [b]")
	exampleIns := []string{`
["FindElements","find","find"]
[[[-1,null,-1]],[1],[2]]
`, `
["FindElements","find","find","find"]
[[[-1,-1,-1,-1,-1]],[1],[3],[5]]
`, `
["FindElements","find","find","find","find"]
[[[-1,null,-1,-1,null,-1]],[2],[3],[4],[5]]
`}
	exampleOuts := []string{`
[null,false,true]
`, `
[null,true,true,false]
`, `
[null,true,false,false,true]
`}
	// custom test cases or WA cases.
	//exampleIns = append(exampleIns, ``)
	//exampleOuts = append(exampleOuts, ``)
	if err := testutil.RunLeetCodeClassWithCase(t, Constructor, exampleIns, exampleOuts, 0); err != nil {
		t.Fatal(err)
	}
}

func TestOnline(t *testing.T) {
	t.Log("Current test is [b]")
	// copy to the Custom Testcase
	const exampleIns = `
["FindElements","find","find"]
[[[-1,null,-1]],[1],[2]]
["FindElements","find","find","find"]
[[[-1,-1,-1,-1,-1]],[1],[3],[5]]
["FindElements","find","find","find","find"]
[[[-1,null,-1,-1,null,-1]],[2],[3],[4],[5]]
`
	exampleOuts := `
[null,false,true]
[null,true,true,false]
[null,true,false,false,true]
`
	// copy Your answer in the Run Code Result
	yourAnswers := `

`
	assert.Equal(t, strings.TrimSpace(exampleOuts), strings.TrimSpace(yourAnswers))
}
