// Code generated by copypasta/template/leetcode/generator_test.go
package main

import (
	"github.com/EndlessCheng/codeforces-go/leetcode/testutil"
	testutil2 "github.com/EndlessCheng/codeforces-go/main/testutil"
	"testing"
)
var 	examples = [][]string{
	{
		`[1,-1,-2,4,-7,3]`, `2`,
		`7`,
	},
	{
		`[10,-5,-2,4,0,3]`, `3`,
		`17`,
	},
	{
		`[1,-5,-20,4,-1,3,-6,-3]`, `2`,
		`0`,
	},
	{
		`[-1,-1]`,`1`,
		`-2`,
	},
	{
		`[-1,-1]`, `2`,
		`-2`,
	},
	{
		`[-1,-1]`,`100`,
		`-2`,
	},
}
func Test(t *testing.T) {
	t.Log("Current test is [c]")

	targetCaseNum := 0 // -1
	if err := testutil.RunLeetCodeFuncWithExamples(t, maxResult, examples, targetCaseNum); err != nil {
		t.Fatal(err)
	}
}
// https://leetcode-cn.com/contest/weekly-contest-220/problems/jump-game-vi/

func TestCompare(t *testing.T) {
	inputGenerator := func() (a []int,k int) {
		rg := testutil2.NewRandGenerator()
		n := rg.Int(1, 9)
		a = rg.IntSlice(n, 1, 9)
		k = rg.Int(1,9)
		return
	}
	min := func(a, b int) int {
		if a < b {
			return a
		}
		return b
	}
	runAC := func(a []int,k int) (ans int) {
		n := len(a)
		dp := make([]int, n)
		for i := range dp {
			dp[i] = -1
		}
		var f func(int) int
		f = func(p int) (res int) {
			if p == n-1 {
				return a[p]
			}
			dv := &dp[p]
			if *dv != -1 {
				return *dv
			}
			defer func() { *dv = res }()
			res = -1e18
			for i := p + 1; i <=min(n-1,p+k); i++ {
				res = max(res, f(i))
			}
			res+=a[p]
			return
		}
		ans = f(0)
		return
	}

	// test examples first (or make it global)

	if err := testutil.RunLeetCodeFuncWithExamples(t, runAC, examples, 0); err != nil {
		t.Fatal(err)
	}
	testutil.CompareInf(t, inputGenerator, runAC, maxResult)
}